{
    "root": {
        "data": {
            "id": "c3mui12z4d40",
            "created": 1592749286682,
            "text": "Design Pattern"
        },
        "children": [
            {
                "data": {
                    "id": "c3muibdck080",
                    "created": 1592749309078,
                    "text": "Java设计模式：23种设计模式全面解析",
                    "hyperlink": "http://c.biancheng.net/design_pattern/",
                    "hyperlinkTitle": ""
                },
                "children": [
                    {
                        "data": {
                            "id": "c3mxqrt5zr40",
                            "created": 1592758435106,
                            "text": "软件设计模式概述",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c3mxrntrk7k0",
                                    "created": 1592758504799,
                                    "text": "软件设计模式的产生背景",
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "c3mxrs1m71k0",
                                            "created": 1592758513981,
                                            "text": "“设计模式”这个术语最初并不是出现在软件设计中，而是被用于建筑领域的设计中"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "c3mxsdd97cw0",
                                            "created": 1592758560398,
                                            "text": "1995 年，艾瑞克·伽马（ErichGamma）、理査德·海尔姆（Richard Helm）、拉尔夫·约翰森（Ralph Johnson）、约翰·威利斯迪斯（John Vlissides）等 4 位作者合作出版了《设计模式：可复用面向对象软件的基础》（Design Patterns: Elements of Reusable Object-Oriented Software）一书，在本教程中收录了 23 个设计模式，这是设计模式领域里程碑的事件，导致了软件设计模式的突破。这 4 位作者在软件开发领域里也以他们的“四人组”（Gang of Four，GoF）匿名著称"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "c3mxsn2v1080",
                                    "created": 1592758581536,
                                    "text": "软件设计模式的概念与意义",
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "c3mxsw7dsrk0",
                                            "created": 1592758601401,
                                            "text": "软件设计模式的概念"
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": "c3mxtbh2yps0",
                                                    "created": 1592758634639,
                                                    "text": "软件设计模式（Software Design Pattern），又称设计模式，是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结"
                                                },
                                                "children": []
                                            },
                                            {
                                                "data": {
                                                    "id": "c3mxtll1o480",
                                                    "created": 1592758656646,
                                                    "text": "它是解决特定问题的一系列套路"
                                                },
                                                "children": []
                                            },
                                            {
                                                "data": {
                                                    "id": "c3mxtv3j1bs0",
                                                    "created": 1592758677355,
                                                    "text": "其目的是为了提高代码的可重用性、代码的可读性和代码的可靠性"
                                                },
                                                "children": []
                                            }
                                        ]
                                    },
                                    {
                                        "data": {
                                            "id": "c3mxswydpkg0",
                                            "created": 1592758603033,
                                            "text": "学习设计模式的意义"
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": "c3mxu8dfdxk0",
                                                    "created": 1592758706252,
                                                    "text": "可以提高程序员的思维能力、编程能力和设计能力"
                                                },
                                                "children": []
                                            },
                                            {
                                                "data": {
                                                    "id": "c3mxuffkb280",
                                                    "created": 1592758721618,
                                                    "text": "使程序设计更加标准化、代码编制更加工程化，使软件开发效率大大提高，从而缩短软件的开发周期"
                                                },
                                                "children": []
                                            },
                                            {
                                                "data": {
                                                    "id": "c3mxukgm5ps0",
                                                    "created": 1592758732566,
                                                    "text": "使设计的代码可重用性高、可读性强、可靠性高、灵活性好、可维护性强"
                                                },
                                                "children": []
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "c3mxv5o8dag0",
                                    "created": 1592758778739,
                                    "text": "软件设计模式的基本要素",
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "c3mxvhswpo80",
                                            "created": 1592758805143,
                                            "text": "通常包含以下几个基本要素：模式名称、别名、动机、问题、解决方案、效果、结构、模式角色、合作关系、实现方法、适用性、已知应用、例程、模式扩展和相关模式等"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "c3mxvmifjww0",
                                            "created": 1592758815393,
                                            "text": "最关键的4个要素"
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": "c3mxw3qrycw0",
                                                    "created": 1592758852903,
                                                    "text": "模式名称"
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": "c3mxwdfyimo0",
                                                            "created": 1592758874017,
                                                            "text": "通常用一两个词来描述，可以根据模式的问题、特点、解决方案、功能和效果来命名"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "data": {
                                                    "id": "c3mxwkp96x40",
                                                    "created": 1592758889817,
                                                    "text": "问题"
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": "c3mxwotmvfc0",
                                                            "created": 1592758898789,
                                                            "text": "描述了该模式的应用环境，即何时使用该模式"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "data": {
                                                    "id": "c3mxwt1ktwg0",
                                                    "created": 1592758907976,
                                                    "text": "解决方案"
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": "c3mxxky3tns0",
                                                            "created": 1592758968716,
                                                            "text": "模式问题的解决方案（Solution）包括设计的组成成分、它们之间的相互关系及各自的职责和协作方式"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "data": {
                                                    "id": "c3mxxouy04g0",
                                                    "created": 1592758977232,
                                                    "text": "效果"
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": "c3mxxwauz6o0",
                                                            "created": 1592758993432,
                                                            "text": "描述了模式的应用效果以及使用该模式应该权衡的问题，即模式的优缺点"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "c3mxyq5sifs0",
                            "created": 1592759058429,
                            "text": "GoF 的 23 种设计模式的分类和功能",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c3mxyx9xrrc0",
                                    "created": 1592759073917,
                                    "text": "设计模式的两种分类方法",
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "c3mxz2eqqtc0",
                                            "created": 1592759085091,
                                            "text": "根据目的来分"
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": "c3mxzicmff40",
                                                    "created": 1592759119792,
                                                    "text": "创建型模式"
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": "c3my0jzqt000",
                                                            "created": 1592759201731,
                                                            "text": "用于描述“怎样创建对象”，它的主要特点是“将对象的创建与使用分离”。GoF 中提供了单例、原型、工厂方法、抽象工厂、建造者等 5 种创建型模式"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "data": {
                                                    "id": "c3mxzmtbl9c0",
                                                    "created": 1592759129508,
                                                    "text": "结构型模式"
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": "c3my0q0gbnk0",
                                                            "created": 1592759214834,
                                                            "text": "用于描述如何将类或对象按某种布局组成更大的结构，GoF 中提供了代理、适配器、桥接、装饰、外观、享元、组合等 7 种结构型模式"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "data": {
                                                    "id": "c3mxzuauv600",
                                                    "created": 1592759145806,
                                                    "text": "行为型模式"
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": "c3my0uwzcw80",
                                                            "created": 1592759225508,
                                                            "text": "用于描述类或对象之间怎样相互协作共同完成单个对象都无法单独完成的任务，以及怎样分配职责。GoF 中提供了模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录、解释器等 11 种行为型模式"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "data": {
                                            "id": "c3mxzbkwq5c0",
                                            "created": 1592759105055,
                                            "text": "根据作用范围来分"
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": "c3my095hk7s0",
                                                    "created": 1592759178133,
                                                    "text": "类模式"
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": "c3my123c9hk0",
                                                            "created": 1592759241130,
                                                            "text": "用于处理类与子类之间的关系，这些关系通过继承来建立，是静态的，在编译时刻便确定下来了。GoF中的工厂方法、（类）适配器、模板方法、解释器属于该模式"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "data": {
                                                    "id": "c3my0d0yweg0",
                                                    "created": 1592759186567,
                                                    "text": "对象模式"
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": "c3my1g9lxvs0",
                                                            "created": 1592759271984,
                                                            "text": "用于处理对象之间的关系，这些关系可以通过组合或聚合来实现，在运行时刻是可以变化的，更具动态性。GoF 中除了以上 4 种，其他的都是对象模式"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "c3my43qe5b40",
                            "created": 1592759479793,
                            "text": "UML中的类图及类图之间的关系"
                        },
                        "children": []
                    }
                ]
            }
        ]
    },
    "template": "default",
    "theme": "fresh-blue",
    "version": "1.4.43"
}